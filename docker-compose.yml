services:
  nginx:
    image: nginx:alpine
    networks:
      - ams-network
    ports:
      - "19876:80"  # 프론트엔드
      - "19877:80"  # 백엔드
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

  frontend:
    networks: 
      - ams-network
    build: ./front
    environment:
      - NODE_ENV=production

  backend:
    networks: 
      - ams-network
    build: ./back
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://dec:Abraham1!@db:5432/stockdb
      - KOREA_INVESTMENT_APPKEY=${KOREA_INVESTMENT_APPKEY}
      - KOREA_INVESTMENT_APPSECRET=${KOREA_INVESTMENT_APPSECRET}
    restart: always
    command: sh -c "
      npx prisma generate &&
      npx prisma migrate deploy &&
      npm run start:prod
      "
    volumes:
      - ./back/.env:/app/.env
    env_file:
      - ./back/.env

  db:
    networks: 
      - ams-network
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: dec
      POSTGRES_PASSWORD: Abraham1!
      POSTGRES_DB: stockdb
    volumes:
      - /home/ams/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dec -d stockdb"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  ams-network:
    name: ams-network
    driver: bridge
    
volumes:
  postgres_data: